settings:
  dryrun: true
variables:
#   Customize these
  - name: build.pr.allowedBranches
    value: ' [ "master" ] '
  - name: build.push.allowedBranches
    value: ' [ "master" ] '
  - name: build.tag.pattern
    value: '"v.[[:digit:]]+.[[:digit:]]+.[[:digit:]]+"'
  - name: build.tag.promoteNamespaceSuffix # suffix for promoted namespace. Default is project-test.
    value: '"-test"'
  - name: build.registry
    value: ' "docker-registry.default.svc:5000" '
  - name: build.namespace
    value: ' kabanero.namespace ' 
  - name: build.serviceAccount
    value: ' "appsody-sa" '
# Setting Variqables 
  - when: ' has(kabanero.eventType) && kabanero.eventType == "Repository" '
    variables: 
      - name: build.repositoryEvent
        value: ' webhook.header["X-Github-Event"][0] ' # push, pull_request, tag, etc
      - name: build.jobid
        value: ' kabanero.jobid '
      - name: build.appsodyConfig
        value: ' downloadYAML(webhook, ".appsody-config.yaml") '
      - name: build.isAppsodybuild
        value: ' has(build.appsodyConfig.content) '
      - name: build.repositoryName
        value: 'toDomainName(webhook.body.repository.name)'
      - name: build.nameSuffix
        value: 'toDomainName(webhook.body.repository.owner.login + "-" + build.repositoryName + "-" + build.jobid)'
      - when: 'build.repositoryEvent == "pull_request"' 
        variables:
          - name: build.pr.url
            value: ' webhook.body.pull_request.url '
          - name: build.pr.action
            value: ' webhook.body.action '
          - name: build.pr.branch
            value: 'webhook.body.pull_request.base.ref'
      - when: 'build.repositoryEvent == "push" '
        variables:
          - name: temp.refArray
            value: ' split(event.ref, "/") '
          - when: ' temp.refArray[1] == "heads" '
            variables:  
              - name: build.push.sha
                value: ' webhook.body.after '
              - name: build.push.sshURL
                value: 'webhook.body.repository.ssh_url'
              - name: build.push.branch
                value: ' temp.refArray[2] '
              - name: build.push.toRegistry
                value: ' build.registry + "/" + build.namespace +  "/" +  build.repositoryName + ":" + build.push.sha'
          - when: ' temp.refArray[1] == "tags" '
            variables:
              - name: build.tag.sha
                value: ' webhook.body.after '
              - name: build.tag.promoteToNamespace
                value: ' build.repositoryName + tag.promoteNamespaceSuffix '
              - name: build.tag.version
                value: ' temp.refArray[2] '
              - name: build.tag.fromResitry
                value: ' build.registry+ "/" + build.namespace +  "/" +  build.repositoryName + ":" + tag.sha '
              - name: build.tag.toRegistry
                value: 'build.registry+ "/" + tag.promoteToNamespace + "/" +  build.repositoryName + ":" + tag.version '
eventTriggers:
  - when: 'has(kabanero.collectionID) && has(build.push.branch) && build.push.branch in build.push.allowedBranches'
    action:
      applyResources:
        directory: push
  - when: |-
      has(kabanero.collectionID) && 
      has(build.pr.branch) && 
      build.pr.branch in build.pr.allowedBranches  &&
      (build.pr.action == "open" || build.pr.action == "synchronize") 
    action:
      applyResources:
        directory: pull
#  - when: 'has(build.tag.sha) && matches(build.tag.version, build.tag.pattern) '
#    action:
#      applyResources:
#        directory: tag
